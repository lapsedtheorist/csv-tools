#!/usr/bin/env php
<?php
// Recursive flatten an N-level nested structure
function flatten($value, $prefix=null) {
	if(is_array($value)) {
		$flat = array();
		foreach($value as $attr=>$val) {
			$flat = array_merge($flat, flatten($val, (isset($prefix) ? $prefix.'.'.$attr : $attr)));
		}
		return $flat;
	} else {
		return (isset($prefix) ? array($prefix=>$value) : $value);
	}
}

$I = fopen($_SERVER['argv'][1], 'r');

$headings = array();
// 1st pass to read all headings, so we collect them all
while( ($json = fgets($I))!==false ) {
	$data = flatten(json_decode($json, true));
	foreach($data as $k=>$v) {
		if(!isset($headings[$k])) $headings[$k] = '';
	}
}
fputcsv(STDOUT, array_keys($headings));
// 2nd pass to collate data against headings, allowing blanks as applicable
rewind($I);
while( ($json = fgets($I))!==false ) {
	$data = flatten(json_decode($json, true));
	fputcsv(STDOUT, array_replace($headings, $data));
}

fclose($I);
